pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "nikhil575/helloworldtest"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Download Artifact') {
            steps {
                copyArtifacts(
                    projectName: 'HW-Build',
                    selector: lastSuccessful(),
                    filter: 'build/libs/app.jar',
                    flatten: true
                )
            }
        }

        stage('Organize Artifact') {
            steps {
                bat '''
                    mkdir build\\libs
                    move app.jar build\\libs\\app.jar
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def tag = "${env.BUILD_NUMBER}"
                    bat "docker build -t %DOCKER_IMAGE%:%BUILD_NUMBER% ."
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    script {
                        def tag = "${env.BUILD_NUMBER}"

                        bat """
                            echo %DOCKER_PASS% | docker login -u %DOCKER_USER% --password-stdin
                            docker push %DOCKER_IMAGE%:%tag%
                            docker tag %DOCKER_IMAGE% %DOCKER_IMAGE%:latest
                            docker push %DOCKER_IMAGE%:latest
                        """
                    }
                }
            }
        }
    }
}