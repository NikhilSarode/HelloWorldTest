kubectl create configmap liquibase-changelog-configmap --from-file=changelog.xml=db/changelog/db.changelog-master.xml

--To query mysql pod
kubectl run mysql-client --rm -it --image=mysql:8 --restart=Never -- bash
mysql -h mysql-service -P 27017 -u root -p
then do mysql commands


To deploy in the cluster:-

minikube start --driver=docker 		(only if not already started)
kubectl apply -f k8s/mysql-config.yaml
kubectl apply -f k8s/service-name-config.yaml
kubectl apply -f k8s/mysql-secret.yaml
kubectl apply -f k8s/mysql.yaml  	(wait for startup)
kubectl apply -f k8s/mysql-liquibase-job.yaml
kubectl apply -f k8s/webapp.yaml

kubectl port-forward service/webapp-service 8010:3000



kubectl get all
kubectl get pods
kubectl logs <pod-name> -f
kubectl logs <pod-name>
kubectl delete deployment mysql-deployment
kubectl delete pod <pod-name>




Docker commands:-
docker build -t helloworldtest .
here . is location of dockerfile

docker tag helloworldtest nikhil575/helloworldtest:latest

docker push nikhil575/helloworldtest:latest


Question:- On local development if i want to upgrade one of the microservice for which other team
has made some changes then how to do it ?
Ans:- just reapply the deployment
kubectl apply -f k8s/webapp.yaml
By doing so kubectl will detect that the docke r image version is changed. So it will redeploy.
In case you stick to the :latest tag then do
kubectl rollout restart deployment order-service
make sure that your yaml has  imagePullPolicy: Always

port forwarding commands using script
powershell -ExecutionPolicy Bypass -File start-port-forward.ps1
powershell -ExecutionPolicy Bypass -File stop-port-forward.ps1

to verify whether process is successful "Get-Process kubectl" in powershell



kubectl apply -k overlays/dev
kubectl apply -k overlays/prod


